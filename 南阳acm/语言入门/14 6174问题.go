/*
6174问题
时间限制：1000 ms  |  内存限制：65535 KB
难度：2
描述
假设你有一个各位数字互不相同的四位数，把所有的数字从大到小排序后得到a,从小到大后得到b,然后用a-b替换原来这个数，并且继续操作。例如，从1234出发，依次可以得到4321-1234=3087、8730-378=8352、8532-2358=6174，又回到了它自己！现在要你写一个程序来判断一个四位数经过多少次这样的操作能出现循环，并且求出操作的次数

比如输入1234执行顺序是1234->3087->8352->6174->6174,输出是4

输入
第一行输入n,代表有n组测试数据。
接下来n行每行都写一个各位数字互不相同的四位数
输出
经过多少次上面描述的操作才能出现循环
样例输入
1
1234
样例输出
4
 */
package main

import (
	"fmt"
	"sort"
)

func main() {
	var n, m int
	fmt.Scan(&n)
	for ;n > 0;n-- {
		fmt.Scan(&m)
		num := 1
		for {
			temp := []int{m / 1000, m / 100 % 10, m / 10 % 10, m % 10}
			sort.Ints(temp)
			min := temp[0] * 1000 + temp[1] * 100 + temp[2] * 10 + temp[3]
			max := temp[3] * 1000 + temp[2] * 100 + temp[1] * 10 + temp[0]
			num++
			if max - min == 6174 {
				break
			}
			m = max - min
		}
		fmt.Println(num)
	}
}